Description: Linearize fragment packets before merge
 We access the data inside the skbs of two fragments directly using memmove
 during the merge. The data of the skb could span over multiple skb pages. An
 direct access without knowledge about the pages would lead to an invalid memory
 access.
Author: Sven Eckelmann <sven@narfation.org>

---
diff --git a/unicast.c b/unicast.c
index cbf022cb3121c8aec64b0a31c4d46d9e33f1972b..18e4278ce6dc3fb49ba1fc4d4dd335f9b5ca22a3 100644
--- a/unicast.c
+++ b/unicast.c
@@ -50,6 +50,11 @@ static struct sk_buff *frag_merge_packet(struct list_head *head,
 		skb = tfp->skb;
 	}
 
+	if (skb_linearize(skb) < 0 || skb_linearize(tmp_skb) < 0) {
+		kfree_skb(tfp->skb);
+		return NULL;
+	}
+
 	skb_pull(tmp_skb, sizeof(struct unicast_frag_packet));
 	if (pskb_expand_head(skb, 0, tmp_skb->len, GFP_ATOMIC) < 0) {
 		/* free buffered skb, skb will be freed later */
